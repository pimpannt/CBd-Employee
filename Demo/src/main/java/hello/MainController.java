package hello;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

@EnableSwagger2
@Api(tags = "CbD-Employee", value = "/demo", description = "CbD Employee Demo")
@Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called employeeRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private EmployeeRepository employeeRepository;


	@PostMapping(path = "/add")
	public @ResponseBody String addNewEmployee(@RequestParam String empID,
											   @RequestParam(value = "name",defaultValue = " ") String name,
											   @RequestParam(value = "project",defaultValue = " ") String project,
											   @RequestParam(value = "hobby",defaultValue = " ") String hobby){
		Employee e = new Employee();
		e.setEMPLOYEE_ID(empID);
		e.setNAME(name);
		e.setPROJECT(project);
		e.setHOBBY(hobby);
		employeeRepository.save(e);
		return "Saved";
	}

	@PutMapping(path = "/edit")
	public @ResponseBody String editProfile(@RequestParam String empID,
											@RequestParam String name,
											@RequestParam String project,
											@RequestParam String hobby){
		employeeRepository.update(hobby,name,project,empID);
		return "Updated";
	}

	@ApiOperation(value = "Get CbD Employee List", nickname = "getAllEmployee", notes = "Note : Get CbD Employee List")
	// Define information of HTTP response for this API for displaying on Swagger
	@ApiResponses(value = {@ApiResponse(code = 200, message = "Success"),
			@ApiResponse(code = 400, message = "Bad Request"),
			@ApiResponse(code = 401, message = "Unauthorized"),
			@ApiResponse(code = 403, message = "Forbidden"),
			@ApiResponse(code = 404, message = "Not Found"),
			@ApiResponse(code = 500, message = "Internal server error occurred"),
			@ApiResponse(code = 503, message = "Service Unavailable")})

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Employee> getAllUsers() {
		// This returns a JSON or XML with the users
		return employeeRepository.findAll();
	}


}
